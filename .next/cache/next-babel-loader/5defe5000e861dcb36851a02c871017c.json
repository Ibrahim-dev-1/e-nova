{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/media/kratos/Nouveau nom/APPRENDRE/src/components/contact-card/contact-card.tsx\";\n\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { themeGet } from \"@styled-system/theme-get\";\nimport * as Yup from \"yup\";\nimport { closeModal } from \"@redq/reuse-modal\";\nimport { ErrorMessage, Formik, Form } from \"formik\";\nimport MaskedInput from \"react-text-mask\";\nimport { Button } from \"../button/button\";\nimport { FieldWrapper, Heading } from \"./contact-card.style\";\nimport { FormattedMessage } from \"react-intl\";\nvar ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required(\"Number is required\")\n});\n\nvar CreateOrUpdateContact = function CreateOrUpdateContact(_ref) {\n  var item = _ref.item;\n  var initialValues = {\n    id: item.id || null,\n    type: item.type || \"secondary\",\n    number: item.number || \"\"\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref2) {\n      var setSubmitting;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setSubmitting = _ref2.setSubmitting;\n              console.log(values, \"formik values\");\n              closeModal();\n              setSubmitting(false);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x, _x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return __jsx(Formik, {\n    initialValues: initialValues,\n    onSubmit: handleSubmit,\n    validationSchema: ContactValidationSchema,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, function (_ref4) {\n    var values = _ref4.values,\n        handleChange = _ref4.handleChange,\n        handleBlur = _ref4.handleBlur,\n        isSubmitting = _ref4.isSubmitting;\n    return __jsx(Form, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, __jsx(Heading, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }, item && item.id ? \"Edit Contact\" : \"Add New Contact\"), __jsx(FieldWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, __jsx(MaskedInput, {\n      mask: [\"(\", /[1-9]/, /\\d/, /\\d/, \")\", \" \", /\\d/, /\\d/, /\\d/, \"-\", /\\d/, /\\d/, /\\d/, /\\d/],\n      className: \"form-control\",\n      placeholder: \"Enter a phone number\",\n      guide: false,\n      id: \"my-input-id\",\n      value: values.number,\n      onChange: handleChange,\n      onBlur: handleBlur,\n      name: \"number\",\n      render: function render(ref, props) {\n        return __jsx(StyledInput, _extends({\n          ref: ref\n        }, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }\n        }));\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    })), __jsx(ErrorMessage, {\n      name: \"number\",\n      component: StyledError,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), __jsx(Button, {\n      disabled: isSubmitting,\n      type: \"submit\",\n      style: {\n        width: \"100%\",\n        height: \"44px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, __jsx(FormattedMessage, {\n      id: \"savedContactId\",\n      defaultMessage: \"Save Contact\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }\n    })));\n  });\n};\n\n_c = CreateOrUpdateContact;\nexport default CreateOrUpdateContact;\nvar StyledInput = styled.input.withConfig({\n  displayName: \"contact-card__StyledInput\",\n  componentId: \"sc-153x5cr-0\"\n})([\"width:100%;height:54px;border-radius:\", \";font-family:\", \";border:1px solid \", \";color:\", \";font-size:16px;line-height:19px;font-weight:\", \";padding:0 18px;box-sizing:border-box;transition:border-color 0.25s ease;&:hover,&:focus{outline:0;}&:focus{border-color:\", \";}&::placeholder{color:\", \";}\"], themeGet(\"radii.base\", \"6px\"), themeGet(\"fonts.body\", \"Lato, sans-serif\"), themeGet(\"colors.gray.700\", \"#e6e6e6\"), themeGet(\"colors.text.bold\", \"#0D1136\"), themeGet(\"fontWeights.regular\", \"400\"), themeGet(\"colors.primary.regular\", \"#009e7f\"), themeGet(\"colors.text.regular\", \"#77798C\"));\n_c2 = StyledInput;\nvar StyledError = styled.div.withConfig({\n  displayName: \"contact-card__StyledError\",\n  componentId: \"sc-153x5cr-1\"\n})([\"color:red;padding-bottom:10px;margin-top:-5px;\"]);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CreateOrUpdateContact\");\n$RefreshReg$(_c2, \"StyledInput\");","map":{"version":3,"sources":["/media/kratos/Nouveau nom/APPRENDRE/src/components/contact-card/contact-card.tsx"],"names":["React","styled","themeGet","Yup","closeModal","ErrorMessage","Formik","Form","MaskedInput","Button","FieldWrapper","Heading","FormattedMessage","ContactValidationSchema","object","shape","number","string","required","CreateOrUpdateContact","item","initialValues","id","type","handleSubmit","values","setSubmitting","console","log","handleChange","handleBlur","isSubmitting","ref","props","StyledError","width","height","StyledInput","input","div"],"mappings":"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","sourcesContent":["import React, { useContext } from \"react\";\nimport styled from \"styled-components\";\nimport { themeGet } from \"@styled-system/theme-get\";\nimport * as Yup from \"yup\";\nimport { closeModal } from \"@redq/reuse-modal\";\nimport { FormikProps, ErrorMessage, Formik, Form } from \"formik\";\nimport MaskedInput from \"react-text-mask\";\nimport { Button } from \"../button/button\";\nimport { FieldWrapper, Heading } from \"./contact-card.style\";\nimport { FormattedMessage } from \"react-intl\";\n\ntype Props = {\n  item?: any | null;\n};\n// Shape of form values\ntype FormValues = {\n  id?: number | null;\n  type?: string;\n  number?: string;\n};\n\nconst ContactValidationSchema = Yup.object().shape({\n  number: Yup.string().required(\"Number is required\"),\n});\n\nconst CreateOrUpdateContact: React.FC<Props> = ({ item }) => {\n  const initialValues = {\n    id: item.id || null,\n    type: item.type || \"secondary\",\n    number: item.number || \"\",\n  };\n  const handleSubmit = async (values: FormValues, { setSubmitting }: any) => {\n    console.log(values, \"formik values\");\n    closeModal();\n    setSubmitting(false);\n  };\n  return (\n    <Formik\n      initialValues={initialValues}\n      onSubmit={handleSubmit}\n      validationSchema={ContactValidationSchema}\n    >\n      {({\n        values,\n        handleChange,\n        handleBlur,\n        isSubmitting,\n      }: FormikProps<FormValues>) => (\n        <Form>\n          <Heading>\n            {item && item.id ? \"Edit Contact\" : \"Add New Contact\"}\n          </Heading>\n          <FieldWrapper>\n            <MaskedInput\n              mask={[\n                \"(\",\n                /[1-9]/,\n                /\\d/,\n                /\\d/,\n                \")\",\n                \" \",\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                \"-\",\n                /\\d/,\n                /\\d/,\n                /\\d/,\n                /\\d/,\n              ]}\n              className=\"form-control\"\n              placeholder=\"Enter a phone number\"\n              guide={false}\n              id=\"my-input-id\"\n              value={values.number}\n              onChange={handleChange}\n              onBlur={handleBlur}\n              name=\"number\"\n              render={(ref: any, props: {}) => (\n                <StyledInput ref={ref} {...props} />\n              )}\n            />\n          </FieldWrapper>\n          <ErrorMessage name=\"number\" component={StyledError} />\n\n          <Button\n            disabled={isSubmitting}\n            type=\"submit\"\n            style={{ width: \"100%\", height: \"44px\" }}\n          >\n            <FormattedMessage\n              id=\"savedContactId\"\n              defaultMessage=\"Save Contact\"\n            />\n          </Button>\n        </Form>\n      )}\n    </Formik>\n  );\n};\n\nexport default CreateOrUpdateContact;\n\nconst StyledInput = styled.input`\n  width: 100%;\n  height: 54px;\n  border-radius: ${themeGet(\"radii.base\", \"6px\")};\n  font-family: ${themeGet(\"fonts.body\", \"Lato, sans-serif\")};\n  border: 1px solid ${themeGet(\"colors.gray.700\", \"#e6e6e6\")};\n  color: ${themeGet(\"colors.text.bold\", \"#0D1136\")};\n  font-size: 16px;\n  line-height: 19px;\n  font-weight: ${themeGet(\"fontWeights.regular\", \"400\")};\n  padding: 0 18px;\n  box-sizing: border-box;\n  transition: border-color 0.25s ease;\n\n  &:hover,\n  &:focus {\n    outline: 0;\n  }\n\n  &:focus {\n    border-color: ${themeGet(\"colors.primary.regular\", \"#009e7f\")};\n  }\n\n  &::placeholder {\n    color: ${themeGet(\"colors.text.regular\", \"#77798C\")};\n  }\n`;\n\nconst StyledError = styled.div`\n  color: red;\n  padding-bottom: 10px;\n  margin-top: -5px;\n`;\n"]},"metadata":{},"sourceType":"module"}